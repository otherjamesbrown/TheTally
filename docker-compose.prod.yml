version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: thetally-db-prod
    environment:
      POSTGRES_DB: thetally_prod
      POSTGRES_USER: thetally_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thetally_user -d thetally_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - thetally-network
    # Remove port exposure for production security
    # ports:
    #   - "5432:5432"

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: thetally-backend-prod
    environment:
      - DATABASE_URL=postgresql://thetally_user:${POSTGRES_PASSWORD}@database:5432/thetally_prod
      - DEBUG=false
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - thetally-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Remove port exposure for production - use reverse proxy
    # ports:
    #   - "8000:8000"

  # React Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: thetally-frontend-prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - thetally-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local

networks:
  thetally-network:
    driver: bridge
